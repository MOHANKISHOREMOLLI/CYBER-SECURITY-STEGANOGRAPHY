from PIL import Image
from cryptography.fernet import Fernet
import base64

def generate_key(password):
    return base64.urlsafe_b64encode(password.ljust(32)[:32].encode())

def encrypt_message(key, message):
    f = Fernet(key)
    encrypted_message = f.encrypt(message.encode())
    return encrypted_message

def decrypt_message(key, encrypted_message):
    f = Fernet(key)
    decrypted_message = f.decrypt(encrypted_message)
    return decrypted_message.decode()

def embed_text(image_path, output_path, text, password):
    img = Image.open(image_path)
    encoded = img.copy()
    width, height = img.size
    
    key = generate_key(password)
    encrypted_text = encrypt_message(key, text + '###')
    
    binary_text = ''.join(format(byte, '08b') for byte in encrypted_text)

    if len(binary_text) > width * height * 3:
        raise ValueError("The text is too long to be hidden in the provided image.")
    
    binary_iter = iter(binary_text)
    
    for x in range(width):
        for y in range(height):
            r, g, b = img.getpixel((x, y))
            r = (r & ~1) | int(next(binary_iter, '0'))
            g = (g & ~1) | int(next(binary_iter, '0'))
            b = (b & ~1) | int(next(binary_iter, '0'))
            encoded.putpixel((x, y), (r, g, b))
    
    encoded.save(output_path)

def extract_text(image_path, password):
    img = Image.open(image_path)
    width, height = img.size

    binary_text = ""
    for x in range(width):
        for y in range(height):
            r, g, b = img.getpixel((x, y))
            binary_text += f"{r & 1}{g & 1}{b & 1}"
    
    binary_text = [binary_text[i:i+8] for i in range(0, len(binary_text), 8)]
    encrypted_bytes = bytes([int(byte, 2) for byte in binary_text])
    
    key = generate_key(password)
    
    try:
        decrypted_text = decrypt_message(key, encrypted_bytes)
        text, _ = decrypted_text.split('###')
        print("Extracted text:", text)
    except:
        print("Incorrect password or corrupted data.")

# Example usage
embed_text("car.jpg", "car_encoded.png", "MohanKishore", "mysecurepassword")
extract_text("car_encoded.png", "mysecurepassword")
